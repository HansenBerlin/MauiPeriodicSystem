@using MauiAppBlazorTest.Values
@using MauiAppBlazorTest.Models
@using MauiAppBlazorTest.Controller
@using MauiAppBlazorTest.Interfaces
@namespace MauiAppBlazorTest.Components

<MudButton
    Variant="@Model.GetVariant()"
    Style="@ButtonColorStyle()"
    OnClick="async () => await OnButtonClickedCallback()">
    @Model.Label
</MudButton>

@code {
    
    [Parameter] 
    public ButtonModel Model { get; set; }
    
    [Parameter] 
    public EventCallback<ColorSwitcher> OnActiveStateChanged { get; set; }
    
    private const string BaseStyle = "margin: 2px; height: 6vh; min-height: 6vh; width: 90%;";

    private string ButtonColorStyle()
    {
        if (Model.Label == "alle")
        {
            Console.WriteLine("");
        }
        return BaseStyle + (Model.State == State.Active ?
            $"background-color: {Model.Color}; color: {(Model.Color == CustomColor.White ? CustomColor.DarkGrey : CustomColor.White)}" :
            $"background-color: transparent; color: {Model.Color}; border-color: {Model.Color};");
    }

    private async Task OnButtonClickedCallback()
    {
        Model.State = Model.State == State.Active ? State.Inactive : State.Active;
        if (Model.Label == "alle")
        {
            Console.WriteLine("");
        }
        var colorSwitcher = new ColorSwitcher(Model.ActivatesTag, Model.State);
        await OnActiveStateChanged.InvokeAsync(colorSwitcher);
    }
}